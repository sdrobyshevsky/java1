
//         /*<aside>
// üìî **–¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏:**
// –î–∞–Ω—ã 2 —Å—Ç—Ä–æ–∫–∏, –Ω–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω–µ—Ç true, –µ—Å–ª–∏ —ç—Ç–∏ —Å—Ç—Ä–æ–∫–∏ —è–≤–ª—è—é—Ç—Å—è –∏–∑–æ–º–æ—Ä—Ñ–Ω—ã–º–∏ –∏ false, –µ—Å–ª–∏ –Ω–µ—Ç.
// –°—Ç—Ä–æ–∫–∏ –∏–∑–æ–º–æ—Ä—Ñ–Ω—ã, –µ—Å–ª–∏ –æ–¥–Ω—É –±—É–∫–≤—É –≤ –ø–µ—Ä–≤–æ–º —Å–ª–æ–≤–µ –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—É—é –±—É–∫–≤—É –≤–æ –≤—Ç–æ—Ä–æ–º —Å–ª–æ–≤–µ, –ø—Ä–∏ —ç—Ç–æ–º

// 1. –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –±—É–∫–≤—ã –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –º–µ–Ω—è—é—Ç—Å—è –Ω–∞ –æ–¥–Ω—É –∏ —Ç—É –∂–µ –±—É–∫–≤—É —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ—Ä—è–¥–∫–∞ —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. (–ù–∞–ø—Ä–∏–º–µ—Ä, add - egg –∏–∑–æ–º–æ—Ä—Ñ–Ω—ã)
// 2. –±—É–∫–≤–∞ –º–æ–∂–µ—Ç –Ω–µ –º–µ–Ω—è—Ç—å—Å—è, –∞ –æ—Å—Ç–∞—Ç—å—Å—è —Ç–∞–∫–æ–π –∂–µ. (–ù–∞–ø—Ä–∏–º–µ—Ä, note - code)

// –ü—Ä–∏–º–µ—Ä 1:

// Input: s = "foo", t = "bar"

// Output: false

// –ü—Ä–∏–º–µ—Ä 2:

// Input: s = "paper", t = "title"
// p=t
// a=i
// e=l
// r=e
// Output: true

// </aside>*/
public class sem19 
{
    
}
static boolean task1(String str1, String str2)

{
        if(str1.length() != str2.length()) return false;
        Map<Character, Character> map = new HashMap<>();
        char[] c1 = str1.toCharArray();
        char[] c2 = str2.toCharArray();
        for (int i = 0; i < c1.length; i++) {
            if(map.containsKey(c1[i])){
                if(c2[i] != map.get(c1[i])) return false;
            } else {
                map.put(c1[i], c2[i]);
            }
        }
        return true;
    }